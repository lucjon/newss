#!/bin/bash
set -e

install_gap () {
	git clone --depth=1 https://github.com/gap-system/gap
	pushd gap
	./autogen.sh
	./configure
	make -j4
	popd
}

install_hpcgap () {
	git clone --depth=1 https://github.com/gap-system/gap
	pushd gap
	# We need to work around a bug in the groups library on HPC-GAP; this is a
	# bit of a shoddy workaround, but PseudoRandom() occasionally produces
	# access violations which make our tests fail. (GAP issue #1629)
	patch -p1 < ../test/pseudorandom.patch

	pushd hpcgap
	git clone --depth=1 https://github.com/gap-system/ward
	cd ward
	./build.sh
	popd

	./autogen.sh
	./configure --enable-hpcgap
	make -j4
	popd
}

fetch_hpcgap_packages () {
	pushd gap
	mkdir -p pkg
	cd pkg
	git clone https://github.com/gap-packages/io
	git clone https://github.com/gap-packages/profiling
	curl "http://www.gap-system.org/pub/gap/gap4/tar.bz2/packages/atlasrep1r5p1.tar.bz2" | tar jxv
	popd
}

fetch_gap_packages () {
	pushd gap
	make bootstrap-pkg-minimal
	cd pkg
	git clone https://github.com/gap-packages/io
	git clone https://github.com/gap-packages/profiling
	curl "http://www.gap-system.org/pub/gap/gap4/tar.bz2/packages/atlasrep1r5p1.tar.bz2" | tar jxv
	popd
}

build_packages () {
	if [ "$HPCGAP" == "yes" ]; then
		export CPPFLAGS="-I../../extern/install/libatomic_ops/include/ -L../../extern/install/libatomic_ops/lib"
	fi

	pushd gap/pkg
	cd io*
	./autogen.sh
	./configure
	make

	cd ../profiling*
	./autogen.sh
	./configure
	make
	popd
}

install_newss () {
	mkdir -p /tmp/gaproot/pkg
	ln -s "$PWD" /tmp/gaproot/pkg/newss
}


if [ "$HPCGAP" == "yes" ]; then
	install_hpcgap
	fetch_hpcgap_packages
else
	install_gap
	fetch_gap_packages
fi
build_packages
install_newss
